using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using ApiCommon.BaseControllers;
using Microsoft.AspNetCore.Authorization;

// **************************************************
//                                                 //
//  Code generated by Levan Doliashvili "API Generator"  //
//												   //
// **************************************************

namespace OnlineShop.Api.Controllers
{
    [Route("v1/Category")]
    public class CategoryController : BaseApiController
    {
        [Authorize(Roles = "Moderator,Admin")]
        [HttpPost("CreateCategory")]
        public async Task<IActionResult> CreateCategoryAsync([FromBody] Domain.Categories.Commands.CreateCategoryCommand command)
        {
            await Mediator.SendAsync(command).ConfigureAwait(false);
            return Ok();
        }

        [Authorize(Roles = "Moderator,Admin")]
        [HttpPost("DeleteCategory")]
        public async Task<IActionResult> DeleteCategoryAsync([FromBody] Domain.Categories.Commands.DeleteCategoryCommand command)
        {
            await Mediator.SendAsync(command).ConfigureAwait(false);
            return Ok();
        }

        [HttpGet("GetCategories")]
        [ProducesResponseType(typeof(System.Collections.Generic.List<Domain.Categories.ReadModels.CategoryReadModel>), 200)]
        public async Task<IActionResult> GetCategoriesAsync([FromQuery] Domain.Categories.Queries.GetCategories query)
        {
            var data = await Mediator.QueryAsync(query).ConfigureAwait(false);
            return Ok(data);
        }
    }
}