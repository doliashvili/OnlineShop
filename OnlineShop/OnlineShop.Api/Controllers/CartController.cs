using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using ApiCommon.BaseControllers;
using Microsoft.AspNetCore.Authorization;

// **************************************************
//                                                 //
//  Code generated by Levan Doliashvili "API Generator"  //
//												   //
// **************************************************

namespace OnlineShop.Api.Controllers
{
    [Authorize(Roles = "User,Admin,Moderator")]
    [Route("v1/Cart")]
    public class CartController : BaseApiController
    {
        [HttpPost("AddCart")]
        public async Task<IActionResult> AddCartAsync([FromBody] Domain.Carts.Commands.AddCartCommand command)
        {
            await Mediator.SendAsync(command).ConfigureAwait(false);
            return Ok();
        }

        [HttpDelete("DeleteCart")]
        public async Task<IActionResult> DeleteCartAsync([FromBody] Domain.Carts.Commands.DeleteCartCommand command)
        {
            await Mediator.SendAsync(command).ConfigureAwait(false);
            return Ok();
        }

        [HttpPost("UpdateCartQuantity")]
        public async Task<IActionResult> UpdateCartQuantityAsync([FromBody] Domain.Carts.Commands.UpdateCartQuantityCommand command)
        {
            await Mediator.SendAsync(command).ConfigureAwait(false);
            return Ok();
        }

        [HttpGet("GetAllCarts")]
        [ProducesResponseType(typeof(System.Collections.Generic.List<Domain.Carts.ReadModels.CartReadModel>), 200)]
        public async Task<IActionResult> GetAllCartsAsync([FromQuery] Domain.Carts.Queries.GetAllCarts query)
        {
            var data = await Mediator.QueryAsync(query).ConfigureAwait(false);
            return Ok(data);
        }
    }
}